When would you want to use a remote repository rather than keeping all 
your work local?
A remote repository would be beneficial when multiple people are 
working on the same project.

Why might you want to always pull changes manually rather than having 
Git automatically stay up-to-date with your remote repository?
If multiple people are working on the same file, automatic pulling will 
create multiple versions of the same file, or may replace your file in 
your local repository, which you may want to avoid.

Describe the differences between forks, clones and branches. When would 
you use one instead of another?
Fork clones a repository within GitHub without creating a local version 
of it.
Clone creates a repository within the local machine by copying it from 
the net or from another place on the machine or network.
Branches creates a different version of the project which maybe 
experimented on and which can have different code than the original or 
the master repository.

What is the benefit of having a copy of the last known state of the 
remote stored locally?
If any unwanted changes are uploaded to the online repository, one 
version without this changes that is stored locally can be used to 
create a new branch.

How would you collaborate without using Git or Github? What would be 
easier and what would be harder?
Share code through email or slack.

When would you want to make changes in a separate branch rather than 
directly in master? What benefits does each approach have?
Making changes in a separate branch makes sure that you have a 
working version of the project in case the changes causes the program
to crash or are unwanted. Making changes directly in the master reduces
development time and effort.