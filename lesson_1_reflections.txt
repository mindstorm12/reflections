why reflect?
using diff showed me which lines had been removed from the old verison
and which lines were added to the new file.
This guided me as to where I should look for errors. It significantly
reduced my debugging time.

How could having easy access to the entire history of a file make you
a more efficient programmer in the long term?
Seeing changes in the file as it is edited can help in finding errors 
when and where they appear. If one has access to different versions of 
the file, they can also choose to go different directions with a 
previous version of the file.

What do you think are the pros and cons of manually choosing when to 
create a commit like you do in Git, vs having automatically saved, like 
Google Docs does?
Saving your document manually can help the programmer to make sure that 
important changes are being saved. They can also help reduce the number 
of unnecessary versions that can be produced by automatic version 
creation.
A programmer may forget to save their documents manually. They may also 
save less versions of the documents, reducing the number of versions. 
With less versions, a programmer may not have much to go with when 
looking for errors, or when deciding if they want to go in a different 
direction.

Why do you think some version control systems, like Git, allow saving 
multiple files in one commit, while others like Google Docs, treat each 
file separately?
Git is geared towards programmers who often work with multiple files in 
a single project. Google Docs, are geared towards everyday user who 
often work with single file at a time.

How can you use the commands git log and git diff to view the history 
of files?
git log can be used to see the changes made to the files from latest to 
the oldest. Then, git diff can be used to compare two versions.

How might using version control make you more confident to make changes 
that could break something?
Version control can help to test more bold, experimental changes and 
try out new things to see how far can i take a program before it gets
broken.

How do you want to use Git?
I want to be able to use Git to create more versions of my projects so 
that I can easily experiment with them.